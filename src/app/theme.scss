@use "sass:list";
@use "sass:string";

@function generateNeon($color, $intensity) {
  $var: var(--#{$color}-#{$intensity});
  $w: ($intensity - 100) * 0.01;
  $d: 30% - ($w * 5);
  $n: 100% - $d;

  @return
    0 0 (0.2rem - $w * 0.01rem) color-mix(in oklab, $var $n, #fff $d),
    0 0 (0.2rem - $w * 0.01rem) color-mix(in oklab, $var $n, #fff $d),
    0 0 (0.8rem - $w * 0.04rem) color-mix(in oklab, $var $n, #000 $d),
    0 0 (0.2rem - $w * 0.01rem) $var,
    0 0 (1.2rem - $w * 0.06rem) $var,
    inset 0 0 (0.6rem - $w * 0.03rem) $var;
}

$intensity-sl: (
  100: (100%, 85%),
  200: (95%, 70%),
  300: (90%, 50%),
  400: (85%, 35%),
  500: (80%, 20%),
  600: (75%, 10%)
);

$color-hues: (
  "scarlet": 6,
  "orange": 31,
  "green": 140,
  "cyan": 175,
  "blue": 219,
  "magenta": 308
);

:root {
  /* Color palette and neon glow */
  @each $color, $hue in $color-hues {
    @each $intensity, $sl in $intensity-sl {
      $saturation: list.nth($sl, 1);
      $lightness: list.nth($sl, 2);
      $hsl: hsl($hue, $saturation, $lightness);

      --#{$color}-#{$intensity}: #{$hsl};
      --#{$color}-#{$intensity}-neon: #{generateNeon($color, $intensity)};
    }
  }

  --text-color: #ffffff;
}

@each $color, $_ in $color-hues {
  #{".color-" + $color} {
    --base-100: var(--#{$color}-100);
    --base-200: var(--#{$color}-200);
    --base-300: var(--#{$color}-300);
    --base-400: var(--#{$color}-400);
    --base-500: var(--#{$color}-500);
    --base-600: var(--#{$color}-600);
    --base-100-neon: var(--#{$color}-100-neon);
    --base-200-neon: var(--#{$color}-200-neon);
    --base-300-neon: var(--#{$color}-300-neon);
    --base-400-neon: var(--#{$color}-400-neon);
    --base-500-neon: var(--#{$color}-500-neon);
    --base-600-neon: var(--#{$color}-600-neon);
  }
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html, body {
  color: var(--text-color);
  color-scheme: dark;
  overflow-x: hidden;

  /* Font settings */
  font-family: var(--font-orbitron), sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  /* We style our own links around here */
  color: inherit;
  text-decoration: none;
}